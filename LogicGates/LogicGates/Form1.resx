<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAASwAAAEsCAYAAAB5fY51AAAABGdBTUEAALGPC/xhBQAAA/tJREFUeF7t
        27ENAkEQBMHLDudDIAjyd0D4HcCcVCuV0zHMntfnAbhCRoBFGQEWZQRYlBFgUUaARRkBFmUEWJQRYFFG
        gEUZARZlBFiUEWBRRoBFGQEWZQRYlBFgUUaARRkBFmUEWJQRYFFGgEUZARZlBFiUEWBRRoBFGQEWZQRY
        lBFgUUaARRkBFmUEWJQRYFFGgEUZARZlBFiUEWBRRoBFGQEWZQRYlBFgUUaARRkBFmUEWJQRYFFGgEUZ
        ARZlBFiUEWBRRoBFGQEWZQRYlBFgUUaARRkBFmUEWJQRYFFGgEUZARZlBFiUEWBRRoBFGQEWZQRYlBFg
        UUaARRkBFmUEWJQRYFFGgEUZARZlBFiUEWBRRoBFGQEWZQRYlBFgUUaARRkBFmUEWJQRYFFGgEUZARZl
        BFiUEWBRRoBFGQEWZQRYlBFgUUaARRkBFmUEWJQRYFFGgEUZARZlBFiUEWBRRoBFGQEWZQRYlBFgUUaA
        RRkBFmUEWJQRYFFGgEUZARZlBFiUEWBRRoBFGQEWZQRYlBFgUUaARRkBFmUEWJQRYFFGgEUZARZlBFiU
        EWBRRoBFGQEWZQRYlBFgUUaARRkBFmUEWJQRYFFGgEUZARZlBFiUEWBRRoBFGQEWZQRYlBFgUUaARRkB
        FmUEWJQRYFFGgEUZARZlBFj0vzfAJc4X4BIZARZlBFiUEWBRRoBFGQEWZQRYlBFgUUaARRkBFuX8HWBP
        PRgCLMoIsCgjwKKMAIsyAizKCLAoI8CijACLMgIsygiwKCPAoowAizICLMoIsCgjwKKMAIsyAizKCLAo
        I8CijACLMgIsygiwKCPAoowAizICLMoIsCgjwKKMAIsyAizKCLAoI8CijACLMgIsygiwKCPAoowAizIC
        LMoIsCgjwKKMAIsyAizKCLAoI8CijACLMgIsygiwKCPAoowAizICLMoIsCgjwKKMAIsyAizKCLAoI8Ci
        jACLMgIsygiwKCPAoowAizICLMoIsCgjwKKMAIsyAizKCLAoI8CijACLMgIsygiwKCPAoowAizICLMoI
        sCgjwKKMAIsyAizKCLAoI8CijACLMgIsygiwKCPAoowAizICLMoIsCgjwKKMAIsyAizKCLAoI8CijACL
        MgIsygiwKCPAoowAizICLMoIsCgjwKKMAIsyAizKCLAoI8CijACLMgIsygiwKCPAoowAizICLMoIsCgj
        wKKMAIsyAizKCLAoI8CijACLMgIsygiwKCPAoowAizICLMoIsCgjwKKMAIsyAizKCLAoI8CijACLMgIs
        ygiwKCPAoowAizICLMoIsCgjwKKMAIsyAizKCLAoI8CijACLMgIsygiwKCPAoowAe57zA7ZnDSeymreC
        AAAAAElFTkSuQmCC
</value>
  </data>
  <data name="pbGate.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>